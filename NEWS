○バージョン間で外部仕様に与える変更点

  この文書では、pandaの異なるバージョン間での、外部仕様の非互換点を挙
げる。バージョンアップによって動かなくなった場合は、ここに挙げられた項
目についてチェックをしてみると良いだろう。

  ここに挙げられるものは主に非互換項目であり、新機能等は他の文書を参照
のこと。

1.2.1 -> 1.2.2

	*	ポート指定の変更

		全てのネットワークを使うプログラムで、ホスト／ポート番号の指定
		の仕方を変更した。全てがポートの指定になり、「ホスト名:ポート
		番号」という指定になった。ポートには UNIX domain も指定できる
		ようになったが、その時の指定の方法は「#パス名[:mode]」である。
		これはコマンドライン定義体共にである。modeが省略されると0666が
		指定されたことになる。

	*	wfc -> aps接続の廃止

		あまり実用的でない接続なので廃止した。

	*	LD定義体の変更

		wfcのポートを指定するwfc宣言子を廃止した。

	*	directory

		・wfcを 制御する接続のために control という宣言子を作った。

		・lddir, bddir, dbddirを廃止してddirのみにした

	*	wfccontrol

		wfcを 制御するために wfccontrol というコマンドを作った。これを
		使うことより、 panda を正常終了させることができる。

	*	dbredirectorのための記述の仕様変更をした

		・リダイレクトをするDB groupには、db_group定義中にredirectを記
		  述するが、この後に書くものは「リダイレクト先のdb_group名」で
		  ある。

		・リダクレクト先のdb_grpupにはredirect_portを記述する。これは
		  dbredirectorが待機しているポートである。

		・リダイレクト先に'name'を書くとリダイレクト先はDBエンジンであ
		  り、'file'を書くとリダイレクト先はファイルになる。

1.1.2 -> 1.2.1

	*	copygen

		-lddir, -bddirを-ddirに統合した

	*	V2手順

		従来、glclientでのデータ構造は、ウィジェットの階層に強く影響を
		受けていたため、画面のカスタマイズが困難であった。これを改良し、
		ウィジェットの階層とデータの階層の関係をなくした解釈手順を用意
		した。ただし、これは通信手順の変更ではなく、通信したデータの解
		釈のしかたの変更であるため、glserverは影響を受けない。原則的に
		はV1とV2は共存可能ではあるが、命名のしかたによっては問題を発生
		するので、デフォルトではoffになっている。

	*	型を示すフラグの変更

		panda全体での型を示すフラグの値が変更となった。具体的には、
		glserver <-> glclient間の通信に非互換が発生しているので、1.1.2
		以前に対応したthird partyの client が動作しなくなる(Ver 1.2.2
		で再度対応)

	*	データの順序の変更

		・元の仕様では、画面データの並びがbindの出現順序に影響を受けて
		  いたので、data文での並びで構成するようにした

	*	データベースからの復帰コード

		・致命的でない復帰コードについては、積算するようにした。これは
		  複数文を持ったSQLだと、最後のSQL文の復帰コードが帰っていたた
		  めである。これを改め、復帰コードを積算することにより、途中の
		  SQLで発生したコードを通知しようとするために、この変更を行なっ
		  た。このため、復帰コードのチェックは、「0か、正か、負か」で
		  判定するべきである。

	*	monitor の注意事項

		・-myhost は複数ホストで運用する場合は、明示的に指定するのが望
		  ましい

	*	*.ldに命令追加/変更

		[cache]

			  apsが端末情報をキャッシュする端末数。デフォルトではキャッ
			シュをしない

	*	directoryに命令追加/変更

		[wfc]

			  wfc の動作を記述する。現在のところ port のみ指定可能。こ
			こで指定したポートで aps からの接続を待機する。ホスト名が
			指定ない場合は localhost が指定されているものとみなす

		[ld]

			  aps の個数を指定可能にした。この数だけ同じ LD の aps が
			の接続を受けつける(monitor配下の場合は起動される)。数だけ
			指定されている場合は、 localhost 上での起動とみなす。

		[multiplex_level]

			  "aps"というレベルを作った。この指定をすると、apsを並列に
			動かす。

	*	C用言語ハンドラが出来た

		・ロードパスは、 APS_LOAD_PATH 。default は MONTSUQI_LOAD_PATH
		  で定義されたもので、これは通常 $libdir

		・ハンドラ名は、"C"

		・開発環境として、 libpandadb, apslib.h, dblib.h が追加になり、
		  この設定のために panda-config がある

	*	DBハンドラの名前が変更になった。DBハンドラの名前は、最初の文字
		が大文字

		shell -> Shell

	*	多くのモジュールをプラグイン化したためにロードパスの指定が必要
		になった。

		・MONPS_LOAD_PATH

			  glserver のアプリケーションの場所。具体的には panda.so
			の場所。デフォルトは $libdir 。

		・APS_HANDLER_LOAD_PATH

			  aps(dbstab も含む) の言語ハンドラの場所。デフォルトは $libdir

		・MONDB_LOAD_PATH

			  HAKAMA のデータベースハンドラの場所。デフォルトは $libdir

		・APS_LOAD_PATH

			Cのアプリケーションロードパス。デフォルトは $libdir

		・COB_LIBRARY_PATH

			OpenCOBOLのアプリケーションロードパス。デフォルトは$libdir

	*	データ処理ライブラリ(libmondai)を外部に出したため、インストー
		ル順序として、データ処理ライブラリが先行する必要がある

	*	libi18n を廃止した

	*	SSL, X509 対応した。そのため、

		・configure のパラメータに --with-ssl が追加になった

		・glserver, glclient に SSL, X509 関係のパラメータが追加された

		・X509 で証明書が正しければパスワードが不要になった
